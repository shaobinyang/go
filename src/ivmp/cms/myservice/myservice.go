
package myservice
// Generated by https://github.com/hooklift/gowsdl
// Do not modify
// Copyright (c) 2015, Hooklift. All rights reserved.
import (
	"encoding/xml"
	"time"

	gowsdl "github.com/hooklift/gowsdl/generator"
	
		
	
)

// against "unused imports"
var _ time.Time
var _ xml.Name


















	
	
	
		
	
	type NETUSERINFO struct {
		XMLName xml.Name `xml:"http://www.headwaytech.com/live.wsdl NET-USER-INFO"`
		
			
	
		
			
			SzLocalIP string `xml:"szLocalIP,omitempty"`
		
	
		
			
			SzUserName string `xml:"szUserName,omitempty"`
		
	
		
			
			SzPassWord string `xml:"szPassWord,omitempty"`
		
	

			
	

			
	

			
	

		
	}

	
		
	
	type NETUSERAUTHORITY struct {
		XMLName xml.Name `xml:"http://www.headwaytech.com/live.wsdl NET-USER-AUTHORITY"`
		
			
	
		
			
			Ctrl int32 `xml:"ctrl,omitempty"`
		
	
		
			
			Preset int32 `xml:"preset,omitempty"`
		
	
		
			
			Video int32 `xml:"video,omitempty"`
		
	
		
			
			Download int32 `xml:"download,omitempty"`
		
	
		
			
			Monitor int32 `xml:"monitor,omitempty"`
		
	
		
			
			Config int32 `xml:"config,omitempty"`
		
	

			
	

			
	

			
	

		
	}

	



	
	type LivePortType struct {
		client *gowsdl.SoapClient
	}

	func NewLivePortType(url string, tls bool) *LivePortType {
		if url == "" {
			url = ""
		}
		client := gowsdl.NewSoapClient(url, tls)

		return &LivePortType{
			client: client,
		}
	}

	
		
		
		
		

		
		
		// 
        Service definition of function ns__login
      
		func (service *LivePortType) Login (request *NETUSERINFO) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__logout
      
		func (service *LivePortType) Logout (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__subscribe
      
		func (service *LivePortType) Subscribe (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__configure
      
		func (service *LivePortType) Configure (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__requestConfigFile
      
		func (service *LivePortType) RequestConfigFile (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__getDeviceStatus
      
		func (service *LivePortType) QueryDeviceStatus (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__queryDeviceInfo
      
		func (service *LivePortType) QueryDeviceInfo (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__queryMediaInfo
      
		func (service *LivePortType) QueryMediaInfo (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__controlDevice
      
		func (service *LivePortType) ControlDevice (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__abandonCameraResource
      
		func (service *LivePortType) AbandonCameraResource (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__queryVideoRecord
      
		func (service *LivePortType) QueryVideoRecord (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__queryNodeVideoRecord
      
		func (service *LivePortType) QueryNodeVideoRecord (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		
		func (service *LivePortType) PlayVideoRecord (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		
		func (service *LivePortType) DownloadVideoRecord (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__sendAlerting
      
		func (service *LivePortType) SendAlerting (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__sendHeartbeat
      
		func (service *LivePortType) SendHeartbeat (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__requestPresets
      
		func (service *LivePortType) RequestPresets (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__startPresetPoll
      
		func (service *LivePortType) StartPresetPoll (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__pausePresetPoll
      
		func (service *LivePortType) PausePresetPoll (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__resumePresetPoll
      
		func (service *LivePortType) ResumePresetPoll (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	
		
		
		
		

		
		
		// 
        Service definition of function ns__stopPresetPoll
      
		func (service *LivePortType) StopPresetPoll (request *String) (*Long, error) {
			response := &Long{}
			err := service.client.Call("", request, response)
			if err != nil {
				return nil, err
			}

			return response, nil
		}
		
	

